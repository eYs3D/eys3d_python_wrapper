name: Release on tagging

on:
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Take codes greeting
      uses: actions/checkout@v2
      with:
            submodules: recursive

    - name: Get custom tarball name
      id: get_tarball_name
      run: echo ::set-output name=TARBALL_NAME::${{ github.ref_name }}

    - name: Get archived folder name for custom tarball
      id: get_archived_folder_name
      run: echo ::set-output name=ARCHIVED_FOLDER::${{ github.repository_owner }}-$(git rev-parse --short HEAD)
    - name: Shell PWD Sync submodules
      run: |
        pwd
        ls -al
    - name: Create custom tarball artifact
      run: |
        cd ../
        mkdir -p artifacts
        tar czvf artifacts/${{ steps.get_tarball_name.outputs.TARBALL_NAME }}.tar.gz --exclude-vcs ./${{ github.event.repository.name }}
    - name: Create draft release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: |
          Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload TAR.GZ release asset
      id: upload-tar-gz-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../artifacts/${{ steps.get_tarball_name.outputs.TARBALL_NAME }}.tar.gz
        asset_name: ${{ steps.get_tarball_name.outputs.TARBALL_NAME }}.tar.gz
        asset_content_type: application/gzip
